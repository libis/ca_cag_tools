<?php
define("__MY_DIR__", "c:/xampp/htdocs");
require_once(__MY_DIR__.'/ca_cag/setup.php');
require_once(__CA_LIB_DIR__.'/core/Datamodel.php');
require_once(__CA_MODELS_DIR__.'/ca_objects.php');
require_once(__MY_DIR__.'/cag_tools/classes/ca_objects_bis.php');
require_once(__MY_DIR__.'/cag_tools/classes/Objects.php');
require_once(__MY_DIR__."/cag_tools-staging/shared/log/KLogger.php");
require_once(__MY_DIR__."/cag_tools/classes/MyFunctions_new.php");

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-21 at 15:02:18.
 */
class ObjectsTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Objects
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        define("__LOG_DIR__", __MY_DIR__."/cag_tools-staging/shared/log/");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * @dataProvider actionProvider
     * @covers Objects::actionToTake
     * @todo   Implement testActionToTake().
     */
    public function testActionToTakeReturnValue($input, $expectedOutput) {

        $log = new KLogger(__LOG_DIR__, KLogger::DEBUG);
        $object = new Objects($log);

        $this->assertInternalType("string", $input);
        $actualOutput = $object->actionToTake($input);
        $this->assertEquals($expectedOutput, $actualOutput);
    }

    public function actionProvider() {

        return array(
            array('', NULL),
            array('new_0001', NULL),
            array('00000001', 1)
         );
    }

    /**
     * @covers Objects::defineIdentificatie
     * @todo   Implement testDefineIdentificatie().
     */
    public function testDefineIdentificatie() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @dataProvider statusProvider
     * @covers Objects::defineStatus
     * @todo   Implement testDefineStatus().
     */
    public function testDefineStatus($input, $expectedOutput) {
        $object = new Objects();
        $actualOutput = $object->defineStatus($input);
        $this->assertEquals($expectedOutput, $actualOutput);
    }
    public function statusProvider() {

        return array(
            array(array('publication_data' => 'ja', 'publishing_allowed' => 'x'), 2),
            array(array('publication_data' => 'ja', 'publishing_allowed' => 'nnn'), 1),
            array(array('publication_data' => 'x', 'publishing_allowed' => 'x'), 0),
            array(NULL, 0),
            array(-1,"Objects.php->actionToTake: unexpected error")
         );
    }

    /**
     * @covers Objects::insertObject
     * @todo   Implement testInsertObject().
     */
    public function testInsertObject() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Objects::addSomeObjectAttribute
     * @todo   Implement testAddSomeObjectAttribute().
     */
    public function testAddSomeObjectAttribute() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Objects::createRelationship
     * @todo   Implement testCreateRelationship().
     */
    public function testCreateRelationship() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Objects::processVariable
     * @todo   Implement testProcessVariable().
     */
    public function testProcessVariable() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
